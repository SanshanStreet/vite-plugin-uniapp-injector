{"version":3,"sources":["../src/plugin.ts","../src/utils/index.ts","../src/module/strip-json-comments/index.js","../src/utils/tool.ts","../src/utils/descriptor.ts","../src/index.ts"],"names":["path","Logger","fs","resolve","singleComment","multiComment","stripWithoutWhitespace","stripWithWhitespace","string","start","end","isEscaped","jsonString","quotePosition","index","backslashCount","stripJsonComments","whitespace","trailingCommas","strip","isInsideString","isInsideComment","offset","buffer","result","commaIndex","currentCharacter","nextCharacter","isValidPageConfig","obj","isValidSubPackageConfig","formatPagePath","root","logger","ConfigManager","options","pages","configManager","parsePagesJson","pagesPath","content","strippedContent","error","initializePages","rootPath","pagesJson","paths","page","pkg","pkgRoot","analyzePages","pagesList","rootOption","components","insertPos","mode","exclude","handlePos","normalizeRoutePath","collectPaths","defaultLabels","normPath","p","pageConfig","item","_a","insertLabel","resourcePath","pwd","relativePath","getInsertLabelDom","labelArr","label","HtmlGenerator","template","labelCode","cleanTemplate","match","StyleGenerator","styles","style","attrs","ScriptGenerator","script","generateHtmlCode","getTemplatePageMeta","generateStyleCode","generateScriptCode","MagicString","parse","transformSfc","id","curPage","descriptor","parseSfcDescriptor","pageMeta","scriptSetup","generateSfcParts","transformedContent","buildTransformedContent","generateSourceMap","err","templateContent","specialScripts","extractSpecialScripts","specialScriptRegex","scripts","originalContent","magicString","CONSTANTS","UniViteRootInjector","state","getValidatedPaths","inputDir","initialize","resetState","logTransformProgress","transformCount","totalPages","progress","change","code","route","resultMap","src_default"],"mappings":"AACA,OAAOA,MAAU,OACjB,OAAS,UAAAC,OAAc,QCDvB,OAAOC,MAAQ,KACf,OAAS,WAAAC,MAAe,OCFxB,IAAMC,EAAgB,OAAO,eAAe,EACtCC,EAAe,OAAO,cAAc,EAEpCC,EAAyB,IAAM,GAC/BC,EAAsB,CAACC,EAAQC,EAAOC,IAAQF,EAAO,MAAMC,EAAOC,CAAG,EAAE,QAAQ,MAAO,GAAG,EAEzFC,EAAY,CAACC,EAAYC,IAAkB,CAChD,IAAIC,EAAQD,EAAgB,EACxBE,EAAiB,EAErB,KAAOH,EAAWE,CAAK,IAAM,MAC5BA,GAAS,EACTC,GAAkB,EAGnB,MAAO,GAAQA,EAAiB,EACjC,EAEe,SAARC,EAAmCJ,EAAY,CAAC,WAAAK,EAAa,GAAM,eAAAC,EAAiB,EAAK,EAAI,CAAC,EAAG,CACvG,GAAI,OAAON,GAAe,SACzB,MAAM,IAAI,UAAU,8DAA8D,OAAOA,KAAc,EAGxG,IAAMO,EAAQF,EAAaV,EAAsBD,EAE7Cc,EAAiB,GACjBC,EAAkB,GAClBC,EAAS,EACTC,EAAS,GACTC,EAAS,GACTC,EAAa,GAEjB,QAASX,EAAQ,EAAGA,EAAQF,EAAW,OAAQE,IAAS,CACvD,IAAMY,EAAmBd,EAAWE,CAAK,EACnCa,EAAgBf,EAAWE,EAAQ,CAAC,EAU1C,GARI,CAACO,GAAmBK,IAAqB,MAE5Bf,EAAUC,EAAYE,CAAK,IAE1CM,EAAiB,CAACA,IAIhB,CAAAA,EAIJ,GAAI,CAACC,GAAmBK,EAAmBC,IAAkB,KAE5DJ,GAAUX,EAAW,MAAMU,EAAQR,CAAK,EACxCQ,EAASR,EACTO,EAAkBjB,EAClBU,YACUO,IAAoBjB,GAAiBsB,EAAmBC,IAAkB;AAAA,EAAQ,CAE5Fb,IACAO,EAAkB,GAClBE,GAAUJ,EAAMP,EAAYU,EAAQR,CAAK,EACzCQ,EAASR,EACT,iBACUO,IAAoBjB,GAAiBsB,IAAqB;AAAA,EAEpEL,EAAkB,GAClBE,GAAUJ,EAAMP,EAAYU,EAAQR,CAAK,EACzCQ,EAASR,UACC,CAACO,GAAmBK,EAAmBC,IAAkB,KAAM,CAEzEJ,GAAUX,EAAW,MAAMU,EAAQR,CAAK,EACxCQ,EAASR,EACTO,EAAkBhB,EAClBS,IACA,iBACUO,IAAoBhB,GAAgBqB,EAAmBC,IAAkB,KAAM,CAEzFb,IACAO,EAAkB,GAClBE,GAAUJ,EAAMP,EAAYU,EAAQR,EAAQ,CAAC,EAC7CQ,EAASR,EAAQ,EACjB,cACUI,GAAkB,CAACG,IACzBI,IAAe,GACdC,IAAqB,KAAOA,IAAqB,KAEpDH,GAAUX,EAAW,MAAMU,EAAQR,CAAK,EACxCU,GAAUL,EAAMI,EAAQ,EAAG,CAAC,EAAIA,EAAO,MAAM,CAAC,EAC9CA,EAAS,GACTD,EAASR,EACTW,EAAa,IACHC,IAAqB,KAAOA,IAAqB,KAAQA,IAAqB,MAAQA,IAAqB;AAAA,IAErHH,GAAUX,EAAW,MAAMU,EAAQR,CAAK,EACxCQ,EAASR,EACTW,EAAa,IAEJC,IAAqB,MAE/BF,GAAUD,EAASX,EAAW,MAAMU,EAAQR,CAAK,EACjDS,EAAS,GACTD,EAASR,EACTW,EAAaX,IAKhB,OAAOU,EAASD,GAAUF,EAAkBF,EAAMP,EAAW,MAAMU,CAAM,CAAC,EAAIV,EAAW,MAAMU,CAAM,EACtG,CCzGA,OAAS,WAAAnB,MAAe,OA0DjB,SAASyB,EAAkBC,EAAiC,CACjE,MAAO,CAAC,CAACA,GAAO,OAAOA,GAAQ,UAAY,SAAUA,CACvD,CAGO,SAASC,EAAwBD,EAAuC,CAC7E,MAAO,CAAC,CAACA,GAAO,OAAOA,GAAQ,UAAY,SAAUA,GAAO,UAAWA,GAAO,MAAM,QAASA,EAAY,KAAK,CAChH,CAGO,SAASE,EAAeC,EAAchC,EAAsB,CACjE,OAAOG,EAAQ6B,EAAM,GAAGhC,OAAU,EAAE,QAAQ,MAAO,GAAG,CACxD,CFhEA,OAAS,UAAAC,MAAc,QAEvB,IAAMgC,EAAS,IAAIhC,EAAO,CACxB,KAAM,oBACN,SAAkD,EAClD,KAAM,SACN,6BAA8B,GAC9B,kBAAmB,QACnB,kBAAmB,+DACrB,CAAC,EAGKiC,EAAN,KAAoB,CAKV,aAAc,CAHtB,KAAQ,WAAkC,KAC1C,KAAQ,UAA8B,IAEf,CAEvB,OAAO,aAA6B,CAClC,OAAKA,EAAc,WACjBA,EAAc,SAAW,IAAIA,GAExBA,EAAc,QACvB,CAEA,cAAcC,EAA6B,CACzC,KAAK,WAAaA,CACpB,CAEA,eAA8B,CAC5B,GAAI,CAAC,KAAK,WACR,MAAM,IAAI,MAAM,8BAA8B,EAEhD,OAAO,KAAK,UACd,CAEA,aAAaC,EAAwB,CACnC,KAAK,UAAYA,CACnB,CAEA,cAA0B,CACxB,GAAI,CAAC,KAAK,UACR,MAAM,IAAI,MAAM,4BAA4B,EAE9C,OAAO,KAAK,SACd,CACF,EAEMC,EAAgBH,EAAc,YAAY,EAMhD,SAASI,EAAeC,EAA8B,CACpD,GAAI,CACF,IAAMC,EAAUtC,EAAG,aAAaqC,EAAW,OAAO,EAC5CE,EAAkBzB,EAAkBwB,CAAO,EACjD,OAAO,KAAK,MAAMC,CAAe,CACnC,OAASC,EAAP,CACA,MAAM,IAAI,MAAM,+BAA+BA,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,GAAG,CACzG,CACF,CAMO,IAAMC,EAAkB,CAACJ,EAAmBK,EAAkBT,IAAoC,CACvG,GAAI,CAEFE,EAAc,cAAcF,CAAO,EAGnC,IAAMU,EAAYP,EAAeC,CAAS,EAC1CF,EAAc,aAAaQ,CAAS,EAGpC,IAAMC,EAAQ,IAAI,IAGlB,OAACD,EAAU,OAAS,CAAC,GAAG,OAAOjB,CAAiB,EAAE,QAASmB,GAASD,EAAM,IAAIf,EAAea,EAAUG,EAAK,IAAI,CAAC,CAAC,GAGjHF,EAAU,aAAe,CAAC,GAAG,OAAOf,CAAuB,EAAE,QAASkB,GAAQ,CAC7E,IAAMC,EAAU9C,EAAQyC,EAAUI,EAAI,IAAI,EAC1CA,EAAI,MAAM,OAAOpB,CAAiB,EAAE,QAASmB,GAASD,EAAM,IAAIf,EAAekB,EAASF,EAAK,IAAI,CAAC,CAAC,CACrG,CAAC,EAEM,MAAM,KAAKD,CAAK,CACzB,OAASJ,EAAP,CACA,MAAM,IAAI,MAAM,mCAAUA,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,GAAG,CACpF,CACF,EAmBaQ,EAAe,IAA0B,CACpD,IAAMb,EAAgBH,EAAc,YAAY,EAC1CiB,EAAYd,EAAc,aAAa,EACvCe,EAAaf,EAAc,cAAc,EAGzC,CAAE,WAAAgB,EAAY,UAAAC,EAAY,CAAC,CAAE,EAAIF,EACjC,CAAE,KAAAG,EAAO,SAAU,QAAAC,EAAU,CAAC,EAAG,UAAAC,EAAY,CAAC,CAAE,EAAIH,EAGpDI,EAAsB1D,GAAyB,IAAMA,EAAK,MAAM,GAAG,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EAG7F2D,EAAe,IAAwB,CAC3C,IAAMb,EAA0B,CAAC,EAGjC,OAACK,EAAU,OAAS,CAAC,GAAG,OAAOvB,CAAiB,EAAE,QAASmB,GACzDD,EAAM,KAAK,CACT,KAAMY,EAAmBX,EAAK,IAAI,EAClC,OAAQA,CACV,CAAC,CACH,GAGCI,EAAU,aAAe,CAAC,GAAG,OAAOrB,CAAuB,EAAE,QAASkB,GAAQ,CAC7EA,EAAI,MAAM,OAAOpB,CAAiB,EAAE,QAASmB,GAC3CD,EAAM,KAAK,CACT,KAAMY,EAAmB,GAAGV,EAAI,QAAQD,EAAK,MAAM,EACnD,OAAQA,EACR,KAAMC,EAAI,IACZ,CAAC,CACH,CACF,CAAC,EAEMF,CACT,EAGMtB,EAA6B,CAAC,EAC9BsB,EAAQa,EAAa,EAQ3B,GALAb,EAAM,QAAQ,CAAC,CAAE,KAAA9C,CAAK,IAAM,CAC1BwB,EAAOxB,CAAI,EAAI,CAAE,MAAO,CAAC,CAAE,CAC7B,CAAC,EAGGuD,IAAS,UAAYF,EAAY,CACnC,IAAMO,EAAgB,OAAO,KAAKP,CAAU,EAE5CP,EAAM,QAAQ,CAAC,CAAE,KAAA9C,CAAK,IAAM,CAC1B,IAAM6D,EAAW7D,EAAK,WAAW,GAAG,EAAIA,EAAO,IAAIA,IAGnD,GAAIwD,EAAQ,KAAMM,GAAMD,KAAcC,EAAE,WAAW,GAAG,EAAIA,EAAI,IAAIA,IAAI,EACpE,OAIF,IAAMC,EAAaN,EAAU,KAC1BO,GAAM,CArLf,IAAAC,EAqLkB,OAAAJ,MAAcI,EAAAD,EAAK,OAAL,MAAAC,EAAW,WAAW,KAAOD,EAAK,KAAO,IAAIA,EAAK,QAC5E,EAGAxC,EAAOxB,CAAI,EAAI,CACb,OAAO+D,GAAA,YAAAA,EAAY,SAAUH,CAC/B,CACF,CAAC,EAGH,OAAOpC,CACT,EAQa0C,EAAc,CAACtB,EAAkBuB,IAAwC,CACpF,GAAI,CACF,IAAMC,EAAMxB,EAAS,QAAQ,MAAO,GAAG,EACjCyB,EAAeF,EAAa,QAAQC,EAAK,EAAE,EAAE,QAAQ,MAAO,GAAG,EAErE,OAAOC,EAAa,SAAS,MAAM,EAAIA,EAAa,MAAM,EAAG,EAAE,EAAIA,CACrE,OAAS3B,EAAP,CACA,OAAAT,EAAO,MAAM,yCAAWS,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,GAAG,EACzE,IACT,CACF,EAOa4B,EAAqBC,GAA+B,CAC/D,GAAI,CAEF,GAAI,CAAC,MAAM,QAAQA,CAAQ,GAAKA,EAAS,SAAW,EAClD,MAAO,GAGT,IAAMlC,EAAgBH,EAAc,YAAY,EAC1C,CAAE,WAAAmB,CAAW,EAAIhB,EAAc,cAAc,EAEnD,MAAI,CAACgB,GAAc,OAAO,KAAKA,CAAU,EAAE,SAAW,EAC7C,GAGFkB,EACJ,OAAQC,GAAUA,GAAS,OAAOA,GAAU,UAAYA,KAASnB,CAAU,EAC3E,IAAKmB,GAAUnB,EAAWmB,CAAK,CAAC,EAChC,KAAK;AAAA,CAAI,CACd,OAAS9B,EAAP,CACA,OAAAT,EAAO,MAAM,4CAAcS,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,GAAG,EAC5E,EACT,CACF,EAIM+B,EAAN,KAAoB,CAOlB,OAAO,aAAaC,EAAkBC,EAA4B,CAChE,GAAI,CACF,GAAI,CAACD,EAAU,MAAO,GAGtB,IAAME,EAAgBF,EAAS,QAAQ,KAAK,gBAAiB,EAAE,EAAE,QAAQ,KAAK,cAAe,EAAE,EAAE,KAAK,EAEtG,MAAI,CAACC,GAAa,CAACC,EAAsB,GAE3B,CAACD,EAAWC,EAAe,EAAE,EAAE,OAAO,OAAO,EAE9C,KAAK;AAAA,CAAI,CACxB,OAASlC,EAAP,CACA,OAAAT,EAAO,MAAM,iCAAaS,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,GAAG,EAC3EgC,CACT,CACF,CAKA,OAAO,gBAAgBA,EAA0B,CAC/C,GAAI,CACF,IAAMG,EAAQH,EAAS,MAAM,kEAAkE,EAC/F,OAAOG,EAAQA,EAAM,CAAC,EAAI,EAC5B,OAASnC,EAAP,CACA,OAAAT,EAAO,MAAM,2DAAcS,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,GAAG,EAC5E,EACT,CACF,CACF,EArCM+B,EACoB,gBAAkB,oEADtCA,EAEoB,cAAgB,8CAwC1C,IAAMK,EAAN,KAAqB,CAInB,OAAO,cAAcC,EAAiC,CACpD,GAAI,CACF,MAAI,CAAC,MAAM,QAAQA,CAAM,GAAKA,EAAO,SAAW,EAAU,GAEnDA,EACJ,IAAKC,GAAU,CACd,IAAMC,EAAQ,CAACD,EAAM,MAAQ,SAASA,EAAM,QAASA,EAAM,QAAU,QAAQ,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EAEvG,MAAO,SAASC,EAAQ,IAAIA,IAAU;AAAA,EAAQD,EAAM;AAAA,SACtD,CAAC,EACA,KAAK;AAAA,CAAI,CACd,OAAStC,EAAP,CACA,OAAAT,EAAO,MAAM,yCAAWS,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,GAAG,EACzE,EACT,CACF,CACF,EAKMwC,EAAN,KAAsB,CAIpB,OAAO,eAAeC,EAAgC,CACpD,GAAI,CACF,IAAMF,EAAQ,CAACE,EAAO,MAAQ,SAASA,EAAO,QAASA,EAAO,OAAS,OAAO,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EAExG,MAAO,UAAUF,EAAQ,IAAIA,IAAU;AAAA,EAAQE,EAAO;AAAA,UACxD,OAASzC,EAAP,CACA,OAAAT,EAAO,MAAM,yCAAWS,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,GAAG,EACzE,EACT,CACF,CACF,EAGa0C,EAAmBX,EAAc,aAAa,KAAKA,CAAa,EAChEY,EAAsBZ,EAAc,gBAAgB,KAAKA,CAAa,EACtEa,EAAoBR,EAAe,cAAc,KAAKA,CAAc,EACpES,EAAqBL,EAAgB,eAAe,KAAKA,CAAe,EG1UrF,OAAS,eAAAM,EAAa,SAAAC,MAA4B,oBAgC3C,IAAMC,EAAe,CAACC,EAAYnD,EAAiBoD,IAAyC,CAEjG,GAAM,CAAE,WAAAC,EAAY,MAAAnD,CAAM,EAAIoD,EAAmBH,EAAInD,CAAO,EAG5D,GAAIE,GAAS,CAACmD,EACZ,MAAO,CACL,KAAMrD,EACN,IAAK,KACL,OAAQE,EAAQ,CAACA,CAAK,EAAI,CAAC,2CAAa,CAC1C,EAGF,GAAI,CAEF,GAAM,CAAE,SAAAgC,EAAU,SAAAqB,EAAU,MAAAf,EAAO,YAAAgB,EAAa,OAAAb,CAAO,EAAIc,GAAiBJ,EAAYD,CAAO,EAGzFM,EAAqBC,GAAwB,CACjD,SAAAzB,EACA,SAAAqB,EACA,WAAAF,EACA,MAAAb,EACA,YAAAgB,EACA,OAAAb,CACF,CAAC,EAGD,OAAOiB,GAAkBT,EAAInD,EAAS0D,CAAkB,CAC1D,OAASG,EAAP,CACA,MAAO,CACL,KAAM7D,EACN,IAAK,KACL,OAAQ,CAAC,yCAAW6D,aAAe,MAAQA,EAAI,QAAU,OAAOA,CAAG,GAAG,CACxE,CACF,CACF,EAaMP,EAAqB,CAACH,EAAYnD,IAA0E,CAChH,GAAI,CACF,MAAO,CAAE,WAAYiD,EAAMjD,CAAO,EAAE,UAAW,CACjD,OAAS6D,EAAP,CAEA,MAAO,CAAE,WAAY,KAAM,MADN,iCAAaV;AAAA,4BAAaU,aAAe,MAAQA,EAAI,QAAU,OAAOA,CAAG,GAC/C,CACjD,CACF,EAgBMJ,GAAmB,CAACJ,EAA2BD,IAAkC,CAxGvF,IAAA3B,EA0GE,IAAMqC,IAAkBrC,EAAA4B,EAAW,WAAX,YAAA5B,EAAqB,UAAW,GAClDU,EAAYL,EAAkBsB,EAAQ,KAAK,EAG3ClB,EAAWU,EAAiBkB,EAAiB3B,CAAS,EACtDoB,EAAWV,EAAoBiB,CAAe,EAC9CtB,EAAQM,EAAkBO,EAAW,QAAU,CAAC,CAAC,EACjDG,EAAcH,EAAW,YAAcN,EAAmBM,EAAW,WAAW,EAAI,KACpFV,EAASU,EAAW,OAASN,EAAmBM,EAAW,MAAM,EAAI,KAE3E,MAAO,CACL,SAAAnB,EACA,SAAAqB,EACA,MAAAf,EACA,YAAAgB,EACA,OAAAb,CACF,CACF,EAcMgB,GAA0B,CAAC,CAC/B,SAAAzB,EACA,SAAAqB,EACA,WAAAF,EACA,MAAAb,EACA,YAAAgB,EACA,OAAAb,CACF,IAAwC,CAEtC,IAAMoB,EAAiBC,GAAsBX,CAAU,EAcvD,MAXc,CACZ,aACAE,EACArB,EACA,cACA6B,EACAP,GAAe,GACfb,GAAU,GACVH,GAAS,EACX,EAEa,KAAK;AAAA,CAAI,EAAE,KAAK,CAC/B,EAKMwB,GAAyBX,GAAsC,CAEnE,IAAMrD,EAAUqD,EAAW,OACrBY,EACJ,+GAEE5B,EACE6B,EAAoB,CAAC,EAE3B,MAAQ7B,EAAQ4B,EAAmB,KAAKjE,CAAO,KAAO,MACpDkE,EAAQ,KAAK7B,EAAM,CAAC,CAAC,EAGvB,OAAO6B,EAAQ,KAAK;AAAA,CAAI,CAC1B,EAKMN,GAAoB,CAACT,EAAYgB,EAAyBT,IAA+B,CAC7F,IAAMU,EAAc,IAAIpB,EAAYmB,CAAe,EACnD,OAAAC,EAAY,UAAU,EAAGD,EAAgB,OAAQT,CAAkB,EAE5D,CACL,KAAMU,EAAY,SAAS,EAC3B,IAAKA,EAAY,YAAY,CAC3B,OAAQjB,EACR,MAAO,GACP,eAAgB,EAClB,CAAC,CACH,CACF,EJpLA,IAAMkB,EAAY,CAChB,uBAAwB,GACxB,eAAgB,QAClB,EAEM5E,EAAS,IAAIhC,GAAO,CACxB,KAAM,oBACN,SAAkD,EAClD,KAAM,SACN,6BAA8B,GAC9B,kBAAmB,QACnB,kBAAmB,+DACrB,CAAC,EAEY6G,EAAsB,CACjC3E,EAAwB,CACtB,UAAW,CACT,KAAM,QACR,CACF,IACW,CAEX,IAAM4E,EAAqB,CACzB,SAAU,CAAC,EACX,cAAe,GACf,WAAY,EACZ,eAAgB,CAClB,EAGMC,EAAoB,IAAM,CAC9B,IAAMC,EAAW,QAAQ,IAAI,eAAiB,GAAG,QAAQ,IAAI,eAC7D,GAAI,CAACA,GAAYA,EAAS,KAAK,IAAM,GACnC,MAAM,IAAI,MAAM,mEAAmE,EAErF,MAAO,CACL,SAAUjH,EAAK,QAAQiH,CAAQ,EAC/B,UAAWjH,EAAK,QAAQiH,EAAU,YAAY,CAChD,CACF,EAGMC,EAAa,IAAM,CACvB,GAAI,CACF,GAAM,CAAE,SAAAtE,EAAU,UAAAL,CAAU,EAAIyE,EAAkB,EAElDrE,EAAgBJ,EAAWK,EAAUT,CAAO,EAC5C4E,EAAM,SAAW7D,EAAa,EAC9B6D,EAAM,WAAa,OAAO,KAAKA,EAAM,QAAQ,EAAE,OAC/CA,EAAM,cAAgB,GAElBA,EAAM,WAAa,EACrB9E,EAAO,KAAK,eAAe8E,EAAM,kBAAkB,EAEnD9E,EAAO,KAAK,8BAA8B,CAE9C,OAASS,EAAP,CACAT,EAAO,MAAM,yBAA0BS,CAAK,EAC5CyE,EAAW,CACb,CACF,EAGMA,EAAa,IAAM,CACvBJ,EAAM,SAAW,CAAC,EAClBA,EAAM,cAAgB,GACtBA,EAAM,WAAa,EACnBA,EAAM,eAAiB,CACzB,EAIMK,EAAuB,IAAM,CACjC,GAAM,CAAE,eAAAC,EAAgB,WAAAC,CAAW,EAAIP,EACvC,GAAIM,EAAiBR,EAAU,yBAA2B,GAAKQ,IAAmBC,EAAY,CAC5F,IAAMC,EAAW,KAAK,IAAI,IAAK,KAAK,MAAOF,EAAiBC,EAAc,GAAG,CAAC,EAC9ErF,EAAO,MAAM,uBAAuBoF,KAAkBC,MAAeC,KAAY,EAErF,EAEA,MAAO,CACL,KAAM,oBAEN,YAAa,CAGX,GAFAtF,EAAO,MAAM,+BAA+B,EAExC8E,EAAM,cAAe,CACvB9E,EAAO,MAAM,+BAA+B,EAC5C,OAGFiF,EAAW,CACb,EAEA,YAAYvB,EAAY6B,EAA2B,CAC7CA,EAAO,QAAU,UAAY7B,EAAG,SAAS,YAAY,IACvD1D,EAAO,KAAK,4CAA4C,EACxDiF,EAAW,EAEf,EAEA,MAAM,UAAUO,EAAc9B,EAAiC,CAE7D,GAAI,CAACkB,EAAU,eAAe,KAAKlB,CAAE,EACnC,MAAO,CAAE,KAAA8B,EAAM,IAAK,IAAK,EAI3B,GAAI,CAACV,EAAM,cACT,OAAA9E,EAAO,KAAK,4CAA4C,EACjD,CAAE,KAAAwF,EAAM,IAAK,IAAK,EAG3B,GAAI,CACF,GAAM,CAAE,SAAA7E,CAAS,EAAIoE,EAAkB,EACjCU,EAAQxD,EAAYtB,EAAU+C,CAAE,EAEtC,GAAI,CAAC+B,EACH,OAAAzF,EAAO,MAAM,sBAAsB0D,GAAI,EAChC,CAAE,KAAA8B,EAAM,IAAK,IAAK,EAG3B,IAAM7B,EAAUmB,EAAM,SAASW,CAAK,EACpC,GAAI,CAAC9B,EACH,OAAA3D,EAAO,MAAM,mCAAmCyF,GAAO,EAChD,CAAE,KAAAD,EAAM,IAAK,IAAK,EAI3BV,EAAM,iBACNK,EAAqB,EAErB,IAAM5F,EAAS,MAAMkE,EAAaC,EAAI8B,EAAM7B,CAAO,EAC7C+B,EAAYnG,EAAO,IAOzB,MAAO,CACL,KAAMA,EAAO,KACb,IAAKmG,GAAa,CAChB,QAAS,EACT,KAAMhC,EACN,SAAUgC,EAAU,SACpB,QAASA,EAAU,QACnB,MAAOA,EAAU,KACnB,EACA,GAAInG,EAAO,OAAS,CAAE,OAAQA,EAAO,MAAO,EAAI,CAAC,CACnD,CACF,OAASkB,EAAP,CACA,OAAAT,EAAO,MAAM,wBAAwB0D,KAAOjD,CAAK,EAC1C,CAAE,KAAA+E,EAAM,IAAK,IAAK,CAC3B,CACF,CACF,CACF,EK1KA,IAAOG,GAAQd","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport path from 'path';\r\nimport { Logger } from 'tslog';\r\nimport { Plugin } from 'vite';\r\nimport { ConfigObject } from './types/plugin';\r\nimport { initializePages, analyzePages, insertLabel } from './utils/index';\r\nimport { transformSfc } from './utils/descriptor';\r\n\r\n// 定义插件状态接口\r\ninterface PluginState {\r\n  pagesMap: Record<string, { label: string[] }>;\r\n  isInitialized: boolean;\r\n  totalPages: number;\r\n  transformCount: number;\r\n}\r\n\r\n// 常量配置\r\nconst CONSTANTS = {\r\n  TRANSFORM_LOG_INTERVAL: 20,\r\n  VUE_FILE_REGEX: /\\.vue$/,\r\n} as const;\r\n\r\nconst logger = new Logger({\r\n  name: 'vite-inset-loader',\r\n  minLevel: process.env.NODE_ENV === 'production' ? 3 : 1,\r\n  type: 'pretty',\r\n  hideLogPositionForProduction: true,\r\n  prettyLogTimeZone: 'local',\r\n  prettyLogTemplate: '{{yyyy}}.{{mm}}.{{dd}} {{hh}}:{{MM}}:{{ss}}\\t{{logLevelName}}\\t',\r\n});\r\n\r\nexport const UniViteRootInjector = (\r\n  options: ConfigObject = {\r\n    insertPos: {\r\n      mode: 'GLOBAL',\r\n    },\r\n  },\r\n): Plugin => {\r\n  // 插件状态管理\r\n  const state: PluginState = {\r\n    pagesMap: {},\r\n    isInitialized: false,\r\n    totalPages: 0,\r\n    transformCount: 0,\r\n  };\r\n\r\n  // 环境配置验证\r\n  const getValidatedPaths = () => {\r\n    const inputDir = process.env.UNI_INPUT_DIR || `${process.env.INIT_CWD}/src`;\r\n    if (!inputDir || inputDir.trim() === '') {\r\n      throw new Error('Missing required environment variables: UNI_INPUT_DIR or INIT_CWD');\r\n    }\r\n    return {\r\n      rootPath: path.resolve(inputDir),\r\n      pagesPath: path.resolve(inputDir, 'pages.json'),\r\n    };\r\n  };\r\n\r\n  // 初始化插件\r\n  const initialize = () => {\r\n    try {\r\n      const { rootPath, pagesPath } = getValidatedPaths();\r\n\r\n      initializePages(pagesPath, rootPath, options);\r\n      state.pagesMap = analyzePages();\r\n      state.totalPages = Object.keys(state.pagesMap).length;\r\n      state.isInitialized = true;\r\n\r\n      if (state.totalPages > 0) {\r\n        logger.info(`Initialized ${state.totalPages} pages`);\r\n      } else {\r\n        logger.warn('No pages found in pages.json');\r\n      }\r\n    } catch (error) {\r\n      logger.error('Initialization failed:', error);\r\n      resetState();\r\n    }\r\n  };\r\n\r\n  // 重置插件状态\r\n  const resetState = () => {\r\n    state.pagesMap = {};\r\n    state.isInitialized = false;\r\n    state.totalPages = 0;\r\n    state.transformCount = 0;\r\n  };\r\n\r\n  // 获取路径配置\r\n  // 日志辅助函数\r\n  const logTransformProgress = () => {\r\n    const { transformCount, totalPages } = state;\r\n    if (transformCount % CONSTANTS.TRANSFORM_LOG_INTERVAL === 0 || transformCount === totalPages) {\r\n      const progress = Math.min(100, Math.round((transformCount / totalPages) * 100));\r\n      logger.debug(`Processing pages... ${transformCount}/${totalPages} (${progress}%)`);\r\n    }\r\n  };\r\n\r\n  return {\r\n    name: 'vite-inset-loader',\r\n\r\n    buildStart() {\r\n      logger.debug('Starting build initialization');\r\n\r\n      if (state.isInitialized) {\r\n        logger.trace('Already initialized, skipping');\r\n        return;\r\n      }\r\n\r\n      initialize();\r\n    },\r\n\r\n    watchChange(id: string, change: { event: string }) {\r\n      if (change.event === 'update' && id.includes('pages.json')) {\r\n        logger.info('Detected pages.json update, reinitializing');\r\n        initialize();\r\n      }\r\n    },\r\n\r\n    async transform(code: string, id: string): Promise<any | null> {\r\n      // 快速过滤非 Vue 文件\r\n      if (!CONSTANTS.VUE_FILE_REGEX.test(id)) {\r\n        return { code, map: null };\r\n      }\r\n\r\n      // 确保插件已初始化\r\n      if (!state.isInitialized) {\r\n        logger.warn('Plugin not initialized, skipping transform');\r\n        return { code, map: null };\r\n      }\r\n\r\n      try {\r\n        const { rootPath } = getValidatedPaths();\r\n        const route = insertLabel(rootPath, id);\r\n\r\n        if (!route) {\r\n          logger.silly(`No route match for ${id}`);\r\n          return { code, map: null };\r\n        }\r\n\r\n        const curPage = state.pagesMap[route];\r\n        if (!curPage) {\r\n          logger.silly(`No page config found for route: ${route}`);\r\n          return { code, map: null };\r\n        }\r\n\r\n        // 更新处理进度\r\n        state.transformCount++;\r\n        logTransformProgress();\r\n\r\n        const result = await transformSfc(id, code, curPage);\r\n        const resultMap = result.map as {\r\n          mappings: string;\r\n          sources: string[];\r\n          names: string[];\r\n          version: number;\r\n        } | null;\r\n\r\n        return {\r\n          code: result.code,\r\n          map: resultMap && {\r\n            version: 3,\r\n            file: id,\r\n            mappings: resultMap.mappings,\r\n            sources: resultMap.sources,\r\n            names: resultMap.names,\r\n          },\r\n          ...(result.errors ? { errors: result.errors } : {}),\r\n        };\r\n      } catch (error) {\r\n        logger.error(`Transform failed for ${id}:`, error);\r\n        return { code, map: null };\r\n      }\r\n    },\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport fs from 'fs';\r\nimport { resolve } from 'path';\r\nimport { SFCScriptBlock, SFCStyleBlock } from '@vue/compiler-sfc';\r\nimport stripJsonComments from '../module/strip-json-comments';\r\nimport { PagesJson, ConfigObject, PageConfig } from '../types/plugin';\r\nimport { isValidPageConfig, isValidSubPackageConfig, formatPagePath } from '../utils/tool';\r\nimport { Logger } from 'tslog';\r\n\r\nconst logger = new Logger({\r\n  name: 'vite-inset-loader',\r\n  minLevel: process.env.NODE_ENV === 'production' ? 3 : 1,\r\n  type: 'pretty',\r\n  hideLogPositionForProduction: true,\r\n  prettyLogTimeZone: 'local',\r\n  prettyLogTemplate: '{{yyyy}}.{{mm}}.{{dd}} {{hh}}:{{MM}}:{{ss}}\\t{{logLevelName}}\\t',\r\n});\r\n\r\n// 配置状态管理\r\nclass ConfigManager {\r\n  private static instance: ConfigManager;\r\n  private rootOption: ConfigObject | null = null;\r\n  private pagesList: PagesJson | null = null;\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance(): ConfigManager {\r\n    if (!ConfigManager.instance) {\r\n      ConfigManager.instance = new ConfigManager();\r\n    }\r\n    return ConfigManager.instance;\r\n  }\r\n\r\n  setRootOption(options: ConfigObject): void {\r\n    this.rootOption = options;\r\n  }\r\n\r\n  getRootOption(): ConfigObject {\r\n    if (!this.rootOption) {\r\n      throw new Error('Root options not initialized');\r\n    }\r\n    return this.rootOption;\r\n  }\r\n\r\n  setPagesList(pages: PagesJson): void {\r\n    this.pagesList = pages;\r\n  }\r\n\r\n  getPagesList(): PagesJson {\r\n    if (!this.pagesList) {\r\n      throw new Error('Pages list not initialized');\r\n    }\r\n    return this.pagesList;\r\n  }\r\n}\r\n\r\nconst configManager = ConfigManager.getInstance();\r\n\r\n/**\r\n * 解析并验证 pages.json 文件\r\n * @throws {Error} 如果文件无效或解析失败\r\n */\r\nfunction parsePagesJson(pagesPath: string): PagesJson {\r\n  try {\r\n    const content = fs.readFileSync(pagesPath, 'utf-8');\r\n    const strippedContent = stripJsonComments(content);\r\n    return JSON.parse(strippedContent) as PagesJson;\r\n  } catch (error) {\r\n    throw new Error(`Failed to parse pages.json: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 初始化页面配置并返回所有页面路径\r\n * @throws {Error} 如果初始化失败\r\n */\r\nexport const initializePages = (pagesPath: string, rootPath: string, options: ConfigObject): string[] => {\r\n  try {\r\n    // 设置全局配置\r\n    configManager.setRootOption(options);\r\n\r\n    // 解析并验证 pages.json\r\n    const pagesJson = parsePagesJson(pagesPath);\r\n    configManager.setPagesList(pagesJson);\r\n\r\n    // 收集页面路径\r\n    const paths = new Set<string>();\r\n\r\n    // 处理主包页面\r\n    (pagesJson.pages || []).filter(isValidPageConfig).forEach((page) => paths.add(formatPagePath(rootPath, page.path)));\r\n\r\n    // 处理分包页面\r\n    (pagesJson.subPackages || []).filter(isValidSubPackageConfig).forEach((pkg) => {\r\n      const pkgRoot = resolve(rootPath, pkg.root);\r\n      pkg.pages.filter(isValidPageConfig).forEach((page) => paths.add(formatPagePath(pkgRoot, page.path)));\r\n    });\r\n\r\n    return Array.from(paths);\r\n  } catch (error) {\r\n    throw new Error(`初始化失败: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n};\r\n\r\ninterface PageAnalysisResult {\r\n  [key: string]: {\r\n    label: string[];\r\n  };\r\n}\r\n\r\ninterface NormalizedPath {\r\n  path: string;\r\n  config: PageConfig;\r\n  root?: string;\r\n}\r\n\r\n/**\r\n * 分析页面路径并生成页面配置映射\r\n * @returns 页面路径到标签的映射\r\n * @throws {Error} 如果配置无效\r\n */\r\nexport const analyzePages = (): PageAnalysisResult => {\r\n  const configManager = ConfigManager.getInstance();\r\n  const pagesList = configManager.getPagesList();\r\n  const rootOption = configManager.getRootOption();\r\n\r\n  // 配置参数\r\n  const { components, insertPos = {} } = rootOption;\r\n  const { mode = 'GLOBAL', exclude = [], handlePos = [] } = insertPos;\r\n\r\n  // 路径规范化\r\n  const normalizeRoutePath = (path: string): string => '/' + path.split('/').filter(Boolean).join('/');\r\n\r\n  // 收集所有页面路径\r\n  const collectPaths = (): NormalizedPath[] => {\r\n    const paths: NormalizedPath[] = [];\r\n\r\n    // 主包页面\r\n    (pagesList.pages || []).filter(isValidPageConfig).forEach((page) =>\r\n      paths.push({\r\n        path: normalizeRoutePath(page.path),\r\n        config: page,\r\n      }),\r\n    );\r\n\r\n    // 分包页面\r\n    (pagesList.subPackages || []).filter(isValidSubPackageConfig).forEach((pkg) => {\r\n      pkg.pages.filter(isValidPageConfig).forEach((page) =>\r\n        paths.push({\r\n          path: normalizeRoutePath(`${pkg.root}/${page.path}`),\r\n          config: page,\r\n          root: pkg.root,\r\n        }),\r\n      );\r\n    });\r\n\r\n    return paths;\r\n  };\r\n\r\n  // 构建结果映射\r\n  const result: PageAnalysisResult = {};\r\n  const paths = collectPaths();\r\n\r\n  // 初始化结果\r\n  paths.forEach(({ path }) => {\r\n    result[path] = { label: [] };\r\n  });\r\n\r\n  // 仅在 GLOBAL 模式下处理\r\n  if (mode === 'GLOBAL' && components) {\r\n    const defaultLabels = Object.keys(components);\r\n\r\n    paths.forEach(({ path }) => {\r\n      const normPath = path.startsWith('/') ? path : `/${path}`;\r\n\r\n      // 检查是否在排除列表中\r\n      if (exclude.some((p) => normPath === (p.startsWith('/') ? p : `/${p}`))) {\r\n        return;\r\n      }\r\n\r\n      // 获取页面特定配置\r\n      const pageConfig = handlePos.find(\r\n        (item) => normPath === (item.page?.startsWith('/') ? item.page : `/${item.page}`),\r\n      );\r\n\r\n      // 应用标签配置\r\n      result[path] = {\r\n        label: pageConfig?.insert ?? defaultLabels,\r\n      };\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * 根据资源路径获取路由\r\n * @param rootPath 根路径\r\n * @param resourcePath 资源路径\r\n * @returns 标准化的路由路径\r\n */\r\nexport const insertLabel = (rootPath: string, resourcePath: string): string | null => {\r\n  try {\r\n    const pwd = rootPath.replace(/\\\\/g, '/');\r\n    const relativePath = resourcePath.replace(pwd, '').replace(/\\\\/g, '/');\r\n\r\n    return relativePath.endsWith('.vue') ? relativePath.slice(0, -4) : relativePath;\r\n  } catch (error) {\r\n    logger.error(`路径处理失败: ${error instanceof Error ? error.message : String(error)}`);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 生成组件DOM标签字符串\r\n * @param labelArr 标签数组\r\n * @returns 组件DOM字符串\r\n */\r\nexport const getInsertLabelDom = (labelArr: string[]): string => {\r\n  try {\r\n    // 快速路径：空数组直接返回\r\n    if (!Array.isArray(labelArr) || labelArr.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    const configManager = ConfigManager.getInstance();\r\n    const { components } = configManager.getRootOption();\r\n\r\n    if (!components || Object.keys(components).length === 0) {\r\n      return '';\r\n    }\r\n\r\n    return labelArr\r\n      .filter((label) => label && typeof label === 'string' && label in components)\r\n      .map((label) => components[label])\r\n      .join('\\n');\r\n  } catch (error) {\r\n    logger.error(`生成组件DOM失败: ${error instanceof Error ? error.message : String(error)}`);\r\n    return '';\r\n  }\r\n};\r\n/**\r\n * HTML生成器类\r\n */\r\nclass HtmlGenerator {\r\n  private static readonly PAGE_META_REGEX = /<(?:page-meta|PageMeta|pageMeta)\\b[^>]*(?:\\/>|>([\\s\\S]*?)<\\/\\1)/gi;\r\n  private static readonly COMMENT_REGEX = /<!--(?!.*?(?:#ifdef|#ifndef|#endif)).*?-->/g;\r\n\r\n  /**\r\n   * 生成优化的 HTML 代码\r\n   */\r\n  static generateHtml(template: string, labelCode?: string): string {\r\n    try {\r\n      if (!template) return '';\r\n\r\n      // 移除 page-meta 标签并清理注释\r\n      const cleanTemplate = template.replace(this.PAGE_META_REGEX, '').replace(this.COMMENT_REGEX, '').trim();\r\n\r\n      if (!labelCode && !cleanTemplate) return '';\r\n\r\n      const parts = [labelCode, cleanTemplate, ''].filter(Boolean);\r\n\r\n      return parts.join('\\n');\r\n    } catch (error) {\r\n      logger.error(`HTML生成失败: ${error instanceof Error ? error.message : String(error)}`);\r\n      return template;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 提取 page-meta 标签内容\r\n   */\r\n  static extractPageMeta(template: string): string {\r\n    try {\r\n      const match = template.match(/<(?:page-meta|PageMeta|pageMeta)\\b[^>]*(?:\\/>|>([\\s\\S]*?)<\\/\\1)/i);\r\n      return match ? match[0] : '';\r\n    } catch (error) {\r\n      logger.error(`页面元数据提取失败: ${error instanceof Error ? error.message : String(error)}`);\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 样式生成器类\r\n */\r\nclass StyleGenerator {\r\n  /**\r\n   * 生成样式代码\r\n   */\r\n  static generateStyle(styles: SFCStyleBlock[]): string {\r\n    try {\r\n      if (!Array.isArray(styles) || styles.length === 0) return '';\r\n\r\n      return styles\r\n        .map((style) => {\r\n          const attrs = [style.lang && `lang=\"${style.lang}\"`, style.scoped && 'scoped'].filter(Boolean).join(' ');\r\n\r\n          return `<style${attrs ? ` ${attrs}` : ''}>\\n${style.content}\\n</style>`;\r\n        })\r\n        .join('\\n');\r\n    } catch (error) {\r\n      logger.error(`样式生成失败: ${error instanceof Error ? error.message : String(error)}`);\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 脚本生成器类\r\n */\r\nclass ScriptGenerator {\r\n  /**\r\n   * 生成脚本代码\r\n   */\r\n  static generateScript(script: SFCScriptBlock): string {\r\n    try {\r\n      const attrs = [script.lang && `lang=\"${script.lang}\"`, script.setup && 'setup'].filter(Boolean).join(' ');\r\n\r\n      return `<script${attrs ? ` ${attrs}` : ''}>\\n${script.content}\\n</script>`;\r\n    } catch (error) {\r\n      logger.error(`脚本生成失败: ${error instanceof Error ? error.message : String(error)}`);\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\n// 导出生成函数\r\nexport const generateHtmlCode = HtmlGenerator.generateHtml.bind(HtmlGenerator);\r\nexport const getTemplatePageMeta = HtmlGenerator.extractPageMeta.bind(HtmlGenerator);\r\nexport const generateStyleCode = StyleGenerator.generateStyle.bind(StyleGenerator);\r\nexport const generateScriptCode = ScriptGenerator.generateScript.bind(ScriptGenerator);\r\n","const singleComment = Symbol('singleComment');\r\nconst multiComment = Symbol('multiComment');\r\n\r\nconst stripWithoutWhitespace = () => '';\r\nconst stripWithWhitespace = (string, start, end) => string.slice(start, end).replace(/\\S/g, ' ');\r\n\r\nconst isEscaped = (jsonString, quotePosition) => {\r\n\tlet index = quotePosition - 1;\r\n\tlet backslashCount = 0;\r\n\r\n\twhile (jsonString[index] === '\\\\') {\r\n\t\tindex -= 1;\r\n\t\tbackslashCount += 1;\r\n\t}\r\n\r\n\treturn Boolean(backslashCount % 2);\r\n};\r\n\r\nexport default function stripJsonComments(jsonString, {whitespace = true, trailingCommas = false} = {}) {\r\n\tif (typeof jsonString !== 'string') {\r\n\t\tthrow new TypeError(`Expected argument \\`jsonString\\` to be a \\`string\\`, got \\`${typeof jsonString}\\``);\r\n\t}\r\n\r\n\tconst strip = whitespace ? stripWithWhitespace : stripWithoutWhitespace;\r\n\r\n\tlet isInsideString = false;\r\n\tlet isInsideComment = false;\r\n\tlet offset = 0;\r\n\tlet buffer = '';\r\n\tlet result = '';\r\n\tlet commaIndex = -1;\r\n\r\n\tfor (let index = 0; index < jsonString.length; index++) {\r\n\t\tconst currentCharacter = jsonString[index];\r\n\t\tconst nextCharacter = jsonString[index + 1];\r\n\r\n\t\tif (!isInsideComment && currentCharacter === '\"') {\r\n\t\t\t// Enter or exit string\r\n\t\t\tconst escaped = isEscaped(jsonString, index);\r\n\t\t\tif (!escaped) {\r\n\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isInsideString) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (!isInsideComment && currentCharacter + nextCharacter === '//') {\r\n\t\t\t// Enter single-line comment\r\n\t\t\tbuffer += jsonString.slice(offset, index);\r\n\t\t\toffset = index;\r\n\t\t\tisInsideComment = singleComment;\r\n\t\t\tindex++;\r\n\t\t} else if (isInsideComment === singleComment && currentCharacter + nextCharacter === '\\r\\n') {\r\n\t\t\t// Exit single-line comment via \\r\\n\r\n\t\t\tindex++;\r\n\t\t\tisInsideComment = false;\r\n\t\t\tbuffer += strip(jsonString, offset, index);\r\n\t\t\toffset = index;\r\n\t\t\tcontinue;\r\n\t\t} else if (isInsideComment === singleComment && currentCharacter === '\\n') {\r\n\t\t\t// Exit single-line comment via \\n\r\n\t\t\tisInsideComment = false;\r\n\t\t\tbuffer += strip(jsonString, offset, index);\r\n\t\t\toffset = index;\r\n\t\t} else if (!isInsideComment && currentCharacter + nextCharacter === '/*') {\r\n\t\t\t// Enter multiline comment\r\n\t\t\tbuffer += jsonString.slice(offset, index);\r\n\t\t\toffset = index;\r\n\t\t\tisInsideComment = multiComment;\r\n\t\t\tindex++;\r\n\t\t\tcontinue;\r\n\t\t} else if (isInsideComment === multiComment && currentCharacter + nextCharacter === '*/') {\r\n\t\t\t// Exit multiline comment\r\n\t\t\tindex++;\r\n\t\t\tisInsideComment = false;\r\n\t\t\tbuffer += strip(jsonString, offset, index + 1);\r\n\t\t\toffset = index + 1;\r\n\t\t\tcontinue;\r\n\t\t} else if (trailingCommas && !isInsideComment) {\r\n\t\t\tif (commaIndex !== -1) {\r\n\t\t\t\tif (currentCharacter === '}' || currentCharacter === ']') {\r\n\t\t\t\t\t// Strip trailing comma\r\n\t\t\t\t\tbuffer += jsonString.slice(offset, index);\r\n\t\t\t\t\tresult += strip(buffer, 0, 1) + buffer.slice(1);\r\n\t\t\t\t\tbuffer = '';\r\n\t\t\t\t\toffset = index;\r\n\t\t\t\t\tcommaIndex = -1;\r\n\t\t\t\t} else if (currentCharacter !== ' ' && currentCharacter !== '\\t' && currentCharacter !== '\\r' && currentCharacter !== '\\n') {\r\n\t\t\t\t\t// Hit non-whitespace following a comma; comma is not trailing\r\n\t\t\t\t\tbuffer += jsonString.slice(offset, index);\r\n\t\t\t\t\toffset = index;\r\n\t\t\t\t\tcommaIndex = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (currentCharacter === ',') {\r\n\t\t\t\t// Flush buffer prior to this point, and save new comma index\r\n\t\t\t\tresult += buffer + jsonString.slice(offset, index);\r\n\t\t\t\tbuffer = '';\r\n\t\t\t\toffset = index;\r\n\t\t\t\tcommaIndex = index;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn result + buffer + (isInsideComment ? strip(jsonString.slice(offset)) : jsonString.slice(offset));\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { resolve } from 'path';\r\nimport { PageConfig, SubPackageConfig } from '../types/plugin';\r\n\r\n/**\r\n * Normalizes paths to POSIX format:\r\n * 1. Converts Windows separators (\\) to POSIX (/)\r\n * 2. Resolves . and .. segments\r\n * 3. Collapses duplicate slashes\r\n * 4. Preserves Windows drive letters (C:/)\r\n *\r\n * @example\r\n * normalizePath('foo\\\\bar') → 'foo/bar'\r\n * normalizePath('C:\\\\path\\\\..\\\\file') → 'C:/file'\r\n * normalizePath('foo//bar') → 'foo/bar'\r\n */\r\nexport function normalizePath(path: string): string {\r\n  // 1. Convert all separators to POSIX\r\n  let posixPath = path.replace(/\\\\/g, '/');\r\n\r\n  // 2. Handle Windows drive letters (preserve C: format)\r\n  const isWindowsDrive = /^[a-z]:/i.test(posixPath);\r\n  if (isWindowsDrive) {\r\n    posixPath = posixPath[0] + ':' + posixPath.slice(1);\r\n  }\r\n\r\n  // 3. Split and normalize path segments\r\n  const segments = posixPath.split('/');\r\n  const normalized: string[] = [];\r\n\r\n  for (const segment of segments) {\r\n    if (segment === '' || segment === '.') continue;\r\n    if (segment === '..') {\r\n      if (normalized.length > 0 && normalized[normalized.length - 1] !== '..') {\r\n        normalized.pop();\r\n      } else if (!isWindowsDrive || normalized.length > 0) {\r\n        // Preserve .. for non-drive absolute paths\r\n        normalized.push('..');\r\n      }\r\n    } else {\r\n      normalized.push(segment);\r\n    }\r\n  }\r\n\r\n  // 4. Reconstruct path\r\n  let result = normalized.join('/');\r\n\r\n  // 5. Handle root cases\r\n  if (isWindowsDrive && result && !result.startsWith('/')) {\r\n    result = posixPath[0] + ':/' + result;\r\n  } else if (posixPath.startsWith('/') && !result.startsWith('/')) {\r\n    result = '/' + result;\r\n  }\r\n\r\n  // 6. Handle empty paths\r\n  return result || (isWindowsDrive ? posixPath[0] + ':/' : '/');\r\n}\r\n\r\n// 类型守卫：确保对象是有效的 PageConfig\r\nexport function isValidPageConfig(obj: unknown): obj is PageConfig {\r\n  return !!obj && typeof obj === 'object' && 'path' in obj;\r\n}\r\n\r\n// 类型守卫：确保对象是有效的 SubPackageConfig\r\nexport function isValidSubPackageConfig(obj: unknown): obj is SubPackageConfig {\r\n  return !!obj && typeof obj === 'object' && 'root' in obj && 'pages' in obj && Array.isArray((obj as any).pages);\r\n}\r\n\r\n// 优化后的路径格式化函数（添加路径解析确保绝对路径）\r\nexport function formatPagePath(root: string, path: string): string {\r\n  return resolve(root, `${path}.vue`).replace(/\\\\/g, '/');\r\n}\r\n","import { MagicString, parse, SFCDescriptor } from '@vue/compiler-sfc';\r\nimport {\r\n  generateHtmlCode,\r\n  generateScriptCode,\r\n  generateStyleCode,\r\n  getInsertLabelDom,\r\n  getTemplatePageMeta,\r\n} from './index';\r\n\r\n// 定义转换结果类型\r\ninterface TransformResult {\r\n  code: string;\r\n  map: object | null;\r\n  errors?: string[];\r\n}\r\n\r\n// 定义页面配置接口\r\ninterface PageConfig {\r\n  label: string[];\r\n  package?: {\r\n    name: string;\r\n    version?: string;\r\n  };\r\n}\r\n\r\n/**\r\n * 转换 Vue SFC 文件的核心处理器\r\n * @param id 文件唯一标识符\r\n * @param content 文件原始内容\r\n * @param curPage 当前页面配置\r\n * @returns 转换后的代码、SourceMap和可能的错误信息\r\n */\r\nexport const transformSfc = (id: string, content: string, curPage: PageConfig): TransformResult => {\r\n  // 1. 安全解析 SFC（带错误处理）\r\n  const { descriptor, error } = parseSfcDescriptor(id, content);\r\n\r\n  // 如果解析出错，返回原始内容和错误信息\r\n  if (error || !descriptor) {\r\n    return {\r\n      code: content,\r\n      map: null,\r\n      errors: error ? [error] : ['无法解析 SFC 文件'],\r\n    };\r\n  }\r\n\r\n  try {\r\n    // 2. 生成 SFC 各部分内容\r\n    const { template, pageMeta, style, scriptSetup, script } = generateSfcParts(descriptor, curPage);\r\n\r\n    // 3. 构建转换后的内容（保留特殊 script 标签）\r\n    const transformedContent = buildTransformedContent({\r\n      template,\r\n      pageMeta,\r\n      descriptor,\r\n      style,\r\n      scriptSetup,\r\n      script,\r\n    });\r\n\r\n    // 4. 生成 SourceMap\r\n    return generateSourceMap(id, content, transformedContent);\r\n  } catch (err) {\r\n    return {\r\n      code: content,\r\n      map: null,\r\n      errors: [`转换过程出错: ${err instanceof Error ? err.message : String(err)}`],\r\n    };\r\n  }\r\n};\r\n\r\n// --- 内部辅助函数 ---\r\n\r\n/**\r\n * 安全解析 SFC 描述符\r\n */\r\n/**\r\n * 安全解析 SFC 描述符\r\n * @param id 文件标识符\r\n * @param content SFC 文件内容\r\n * @returns 解析后的描述符或错误信息\r\n */\r\nconst parseSfcDescriptor = (id: string, content: string): { descriptor: SFCDescriptor | null; error?: string } => {\r\n  try {\r\n    return { descriptor: parse(content).descriptor };\r\n  } catch (err) {\r\n    const errorMessage = `[SFC解析错误] ${id}\\n错误信息: ${err instanceof Error ? err.message : String(err)}`;\r\n    return { descriptor: null, error: errorMessage };\r\n  }\r\n};\r\n\r\ninterface SfcParts {\r\n  template: string;\r\n  pageMeta: string;\r\n  style: string | null;\r\n  scriptSetup: string | null;\r\n  script: string | null;\r\n}\r\n\r\n/**\r\n * 生成 SFC 各部分内容\r\n * @param descriptor SFC 描述符\r\n * @param curPage 页面配置\r\n * @returns 处理后的 SFC 各部分内容\r\n */\r\nconst generateSfcParts = (descriptor: SFCDescriptor, curPage: PageConfig): SfcParts => {\r\n  // 提取模板内容\r\n  const templateContent = descriptor.template?.content || '';\r\n  const labelCode = getInsertLabelDom(curPage.label);\r\n\r\n  // 并行处理各个部分\r\n  const template = generateHtmlCode(templateContent, labelCode);\r\n  const pageMeta = getTemplatePageMeta(templateContent);\r\n  const style = generateStyleCode(descriptor.styles || []);\r\n  const scriptSetup = descriptor.scriptSetup ? generateScriptCode(descriptor.scriptSetup) : null;\r\n  const script = descriptor.script ? generateScriptCode(descriptor.script) : null;\r\n\r\n  return {\r\n    template,\r\n    pageMeta,\r\n    style,\r\n    scriptSetup,\r\n    script,\r\n  };\r\n};\r\n\r\n/**\r\n * 构建最终转换后的内容\r\n */\r\ninterface TransformedContentParams {\r\n  template: string;\r\n  pageMeta: string;\r\n  descriptor: SFCDescriptor;\r\n  style: string | null;\r\n  scriptSetup: string | null;\r\n  script: string | null;\r\n}\r\n\r\nconst buildTransformedContent = ({\r\n  template,\r\n  pageMeta,\r\n  descriptor,\r\n  style,\r\n  scriptSetup,\r\n  script,\r\n}: TransformedContentParams): string => {\r\n  // 保留特殊 script 标签（wxs/sjs 等）\r\n  const specialScripts = extractSpecialScripts(descriptor);\r\n\r\n  // 使用模板字符串数组以提高性能\r\n  const parts = [\r\n    '<template>',\r\n    pageMeta,\r\n    template,\r\n    '</template>',\r\n    specialScripts,\r\n    scriptSetup || '',\r\n    script || '',\r\n    style || '',\r\n  ];\r\n\r\n  return parts.join('\\n').trim();\r\n};\r\n\r\n/**\r\n * 提取特殊 script 标签（wxs/sjs 等）\r\n */\r\nconst extractSpecialScripts = (descriptor: SFCDescriptor): string => {\r\n  // 从原始内容中提取（因为 descriptor 不会包含这些特殊标签）\r\n  const content = descriptor.source;\r\n  const specialScriptRegex =\r\n    /<script\\s+module=\"[^\"]*\"\\s+lang=\"(?:wxs|sjs|filter\\.js)\"(?:\\s+src=\"[^\"]*\")?\\s*(?:\\/>|>([\\s\\S]*?)<\\/script>)/g;\r\n\r\n  let match;\r\n  const scripts: string[] = [];\r\n\r\n  while ((match = specialScriptRegex.exec(content)) !== null) {\r\n    scripts.push(match[0]);\r\n  }\r\n\r\n  return scripts.join('\\n');\r\n};\r\n\r\n/**\r\n * 生成 SourceMap\r\n */\r\nconst generateSourceMap = (id: string, originalContent: string, transformedContent: string) => {\r\n  const magicString = new MagicString(originalContent);\r\n  magicString.overwrite(0, originalContent.length, transformedContent);\r\n\r\n  return {\r\n    code: magicString.toString(),\r\n    map: magicString.generateMap({\r\n      source: id,\r\n      hires: true,\r\n      includeContent: false,\r\n    }),\r\n  };\r\n};\r\n","import { UniViteRootInjector } from './plugin';\r\nimport type { ConfigObject, InsertPosConfig, HandlePosItem } from './types/plugin';\r\n\r\n// 导出插件主函数\r\nexport default UniViteRootInjector;\r\n\r\n// 导出类型定义，方便用户使用\r\nexport type { ConfigObject, InsertPosConfig, HandlePosItem };\r\n"]}