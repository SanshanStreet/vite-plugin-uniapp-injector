import { resolve, dirname } from 'path';
import fs from 'fs';
import { ConfigObject } from '../types/plugin';

/**
 * 生成路由类型声明文件
 * @param pageNames pages.json name内容
 * @param options 插件配置对象
 * @returns 生成的类型文件绝对路径
 */
export function generateRouteTypes(pageNames: string[], options: ConfigObject): string {
  const typeStr = `// Generated by unplugin-auto-import\nexport type Path = ${pageNames
    .map((n) => `'${n}'`)
    .join(' | ')};\n`;
  // 目标路径优先取 options.dts，否则 src/auto-route.d.ts
  const dtsPath = options.dts ? resolve(process.cwd(), options.dts) : resolve(process.cwd(), 'src/auto-route.d.ts');
  // 确保目录存在
  fs.mkdirSync(dirname(dtsPath), { recursive: true });
  let needWrite = true;
  if (fs.existsSync(dtsPath)) {
    const oldContent = fs.readFileSync(dtsPath, 'utf8');
    if (oldContent === typeStr) {
      needWrite = false;
    }
  }
  if (needWrite) {
    fs.writeFileSync(dtsPath, typeStr, 'utf8');
  }
  return dtsPath;
}
